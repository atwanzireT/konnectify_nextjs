/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./static/main.js":
/*!************************!*\
  !*** ./static/main.js ***!
  \************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\r\n* Template Name: Bikin - v4.10.0\r\n* Template URL: https://bootstrapmade.com/bikin-free-simple-landing-page-template/\r\n* Author: BootstrapMade.com\r\n* License: https://bootstrapmade.com/license/\r\n*/ (function() {\n    \"use strict\";\n    //  Easy selector helper function\n    const select = function(el) {\n        let all = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        el = el.trim();\n        if (all) {\n            return [\n                ...document.querySelectorAll(el)\n            ];\n        } else {\n            return document.querySelector(el);\n        }\n    };\n    // Easy event listener function\n    const on = function(type, el, listener) {\n        let all = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n        let selectEl = select(el, all);\n        if (selectEl) {\n            if (all) {\n                selectEl.forEach((e)=>e.addEventListener(type, listener));\n            } else {\n                selectEl.addEventListener(type, listener);\n            }\n        }\n    };\n    //  Easy on scroll event listener \n    const onscroll = (el, listener)=>{\n        el.addEventListener(\"scroll\", listener);\n    };\n    //  Navbar links active state on scroll\n    let navbarlinks = select(\"#navbar .scrollto\", true);\n    const navbarlinksActive = ()=>{\n        let position = window.scrollY + 200;\n        navbarlinks.forEach((navbarlink)=>{\n            if (!navbarlink.hash) return;\n            let section = select(navbarlink.hash);\n            if (!section) return;\n            if (position >= section.offsetTop && position <= section.offsetTop + section.offsetHeight) {\n                navbarlink.classList.add(\"active\");\n            } else {\n                navbarlink.classList.remove(\"active\");\n            }\n        });\n    };\n    window.addEventListener(\"load\", navbarlinksActive);\n    onscroll(document, navbarlinksActive);\n    //  Scrolls to an element with header offset\n    const scrollto = (el)=>{\n        let header = select(\"#header\");\n        let offset = header.offsetHeight;\n        let elementPos = select(el).offsetTop;\n        window.scrollTo({\n            top: elementPos - offset,\n            behavior: \"smooth\"\n        });\n    };\n    //  Back to top button\n    let backtotop = select(\".back-to-top\");\n    if (backtotop) {\n        const toggleBacktotop = ()=>{\n            if (window.scrollY > 100) {\n                backtotop.classList.add(\"active\");\n            } else {\n                backtotop.classList.remove(\"active\");\n            }\n        };\n        window.addEventListener(\"load\", toggleBacktotop);\n        onscroll(document, toggleBacktotop);\n    }\n    /**\r\n   * Mobile nav toggle\r\n\r\n  on('click', '.mobile-nav-toggle', function(e) {\r\n    select('#navbar').classList.toggle('navbar-mobile')\r\n    this.classList.toggle('bi-list')\r\n    this.classList.toggle('bi-x')\r\n  })\r\n\r\n  /**\r\n   * Mobile nav dropdowns activate\r\n   */ on(\"click\", \".navbar .dropdown > a\", function(e) {\n        if (select(\"#navbar\").classList.contains(\"navbar-mobile\")) {\n            e.preventDefault();\n            this.nextElementSibling.classList.toggle(\"dropdown-active\");\n        }\n    }, true);\n    /**\r\n   * Scrool with ofset on links with a class name .scrollto\r\n   */ on(\"click\", \".scrollto\", function(e) {\n        if (select(this.hash)) {\n            e.preventDefault();\n            let navbar = select(\"#navbar\");\n            if (navbar.classList.contains(\"navbar-mobile\")) {\n                navbar.classList.remove(\"navbar-mobile\");\n                let navbarToggle = select(\".mobile-nav-toggle\");\n                navbarToggle.classList.toggle(\"bi-list\");\n                navbarToggle.classList.toggle(\"bi-x\");\n            }\n            scrollto(this.hash);\n        }\n    }, true);\n    /**\r\n   * Scroll with ofset on page load with hash links in the url\r\n   */ window.addEventListener(\"load\", ()=>{\n        if (window.location.hash) {\n            if (select(window.location.hash)) {\n                scrollto(window.location.hash);\n            }\n        }\n    });\n    /**\r\n   * Preloader\r\n   */ let preloader = select(\"#preloader\");\n    if (preloader) {\n        window.addEventListener(\"load\", ()=>{\n            preloader.remove();\n        });\n    }\n    /**\r\n   * Porfolio isotope and filter\r\n   */ window.addEventListener(\"load\", ()=>{\n        let portfolioContainer = select(\".portfolio-container\");\n        if (portfolioContainer) {\n            let portfolioIsotope = new Isotope(portfolioContainer, {\n                itemSelector: \".portfolio-item\"\n            });\n            let portfolioFilters = select(\"#portfolio-flters li\", true);\n            on(\"click\", \"#portfolio-flters li\", function(e) {\n                e.preventDefault();\n                portfolioFilters.forEach(function(el) {\n                    el.classList.remove(\"filter-active\");\n                });\n                this.classList.add(\"filter-active\");\n                portfolioIsotope.arrange({\n                    filter: this.getAttribute(\"data-filter\")\n                });\n                portfolioIsotope.on(\"arrangeComplete\", function() {\n                    AOS.refresh();\n                });\n            }, true);\n        }\n    });\n    /**\r\n   * Initiate portfolio lightbox \r\n   */ const portfolioLightbox = GLightbox({\n        selector: \".portfolio-lightbox\"\n    });\n    /**\r\n   * Portfolio details slider\r\n   */ new Swiper(\".portfolio-details-slider\", {\n        speed: 400,\n        loop: true,\n        autoplay: {\n            delay: 5000,\n            disableOnInteraction: false\n        },\n        pagination: {\n            el: \".swiper-pagination\",\n            type: \"bullets\",\n            clickable: true\n        }\n    });\n    /**\r\n   * Testimonials slider\r\n   */ new Swiper(\".testimonials-slider\", {\n        speed: 600,\n        loop: true,\n        autoplay: {\n            delay: 5000,\n            disableOnInteraction: false\n        },\n        slidesPerView: \"auto\",\n        pagination: {\n            el: \".swiper-pagination\",\n            type: \"bullets\",\n            clickable: true\n        },\n        breakpoints: {\n            320: {\n                slidesPerView: 1,\n                spaceBetween: 20\n            },\n            1200: {\n                slidesPerView: 3,\n                spaceBetween: 20\n            }\n        }\n    });\n    /**\r\n   * Animation on scroll\r\n   */ window.addEventListener(\"load\", ()=>{\n        AOS.init({\n            duration: 1000,\n            easing: \"ease-in-out\",\n            once: true,\n            mirror: false\n        });\n    });\n})();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/main.js\n"));

/***/ })

});